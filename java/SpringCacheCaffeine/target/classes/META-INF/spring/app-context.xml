<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
        http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-4.2.xsd

        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd">


    <cache:annotation-driven/>

    <!--<context:annotation-config/>-->

    <bean id="customKeyGenerator" class="com.pawan.choure.CustomKeyGenerator"/>

    <bean id="compositeService" class="com.pawan.choure.CompositeService">
        <property name="cacheManager">
            <ref bean="cacheManager"/>
        </property>
    </bean>

    <bean class="com.pawan.choure.Composite" name="composite" id="composite"/>

    <bean id="cacheManager" class="org.springframework.cache.caffeine.CaffeineCacheManager">
        <constructor-arg>
            <list>
                <value>composite</value>
            </list>
        </constructor-arg>
        <property name="cacheSpecification" value="maximumSize=300000,expireAfterWrite=10h,recordStats" />
        <property name="allowNullValues" value="false" />
    </bean>



    <bean id="cacheManagerRedis" class="org.springframework.cache.caffeine.CaffeineCacheManager">
        <constructor-arg>
            <list>
                <value>composite</value>
            </list>
        </constructor-arg>
        <property name="cacheSpecification" value="maximumSize=300000,expireAfterWrite=10h,recordStats" />
        <property name="allowNullValues" value="false" />
    </bean>
    <!-- define caching behavior -->
    <cache:advice id="cacheAdvice" cache-manager="cacheManager">
        <cache:caching cache="composite">
            <!--<cache:cacheable method="getCustomerResponse" key="#composite.id"/>
            <cache:cacheable method="getComposite" key="#composite.id"/>
            <cache:cacheable method="getCompositeCheck" key="#composite.id"/>-->
            <cache:cacheable method="getCustomerResponse" key-generator="customKeyGenerator"/>
            <cache:cacheable method="getComposite" key-generator="customKeyGenerator"/>
            <cache:cacheable method="getCompositeCheck" key-generator="customKeyGenerator" unless="#result == null"/>
            <cache:cache-put method="putComposite" key-generator="customKeyGenerator"/>
            <cache:cache-evict method="removeComposite" key-generator="customKeyGenerator"/>
        </cache:caching>
    </cache:advice>


    <!-- Multiple Cache Manager -->

    <bean id="compositeService2" class="com.pawan.choure.CompositeService2">
        <property name="cacheManager">
            <ref bean="cacheManagerSimple"/>
        </property>
    </bean>


    <bean id="cacheManagerSimple" class="org.springframework.cache.support.SimpleCacheManager">
        <property name="caches">
            <set>
                <bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" name="otcMarkets"/>
            </set>
        </property>
    </bean>


    <!-- define caching behavior -->
    <cache:advice id="cacheAdviceSimple" cache-manager="cacheManagerSimple">
        <cache:caching cache="otcMarkets">
            <cache:cacheable method="getOTCMarkets" key="#root.methodName" unless="#result == null"/>
            <cache:cache-evict method="clearOTCMarkets" all-entries="true"/>
        </cache:caching>
    </cache:advice>

    <!-- apply the behavior to all the implementations of CustomerDataService  -->
    <aop:config>
        <aop:advisor advice-ref="cacheAdvice" pointcut="execution(* com.pawan.choure.CompositeService.*(..))"/>
    </aop:config>

    <!-- apply the behavior to all the implementations of CustomerDataService  -->
    <aop:config>
        <aop:advisor advice-ref="cacheAdviceSimple" pointcut="execution(* com.pawan.choure.CompositeService2.*(..))"/>
    </aop:config>
</beans>